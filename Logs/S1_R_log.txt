
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> #' ---
> #' title: "Custom array sequence generation"
> #' author: "Tomas Bjorklund"
> #' edited by: "Jaro Steindorff"
> #' output: SortedFragments_all.txt -- a txt file holding all sequneces created from DNA-lib_RetrogradeTransport.fasta yb using a window of 14 and 22 amino acids.
> #' ---
> 
> #  This will make R-functions such as library() and install.packages() use this directory:
> .libPaths(c('~/MyRextensions', .libPaths()))
> # load the necessary libraries
> suppressPackageStartupMessages(library(ShortRead))
> suppressPackageStartupMessages(library(parallel))
> suppressPackageStartupMessages(library(GeneGA))
> suppressPackageStartupMessages(library(devtools))
> suppressPackageStartupMessages(library(Hmisc))
> suppressPackageStartupMessages(library(kableExtra))
> 
> #'Loading source files
> #'===================
> source(file.path("functions", "AAtoDNA.R"))
> source(file.path("functions", "GeneCodon.R"))
> #Override the GeneCodon function with local version containing human codons
> unlockBinding("GeneCodon", as.environment("package:GeneGA"))
> assign("GeneCodon", GeneCodon, as.environment("package:GeneGA"))
> # read in the fasta file with the known retrograde transport proteins
> allSequences <- readFasta("input/DNA-lib_RetrogradeTransport.fasta")
> AAlist <- data.frame(Class=character(),
+                      Family=character(),
+                      Strain=character(),
+                      Note=character(),
+                      Number=character(),
+                      Name=character(),
+                      AAfragment=character(),
+                      stringsAsFactors = FALSE)
> 
> 
> #'Generation of AA table for the selected proteins
> #'===================
> 
> strt<-Sys.time()
> for (i in 1:length(allSequences)){
+   thisID <- as.character(ShortRead::id(allSequences[i]))
+   thisSeq <- sread(allSequences[i])
+   thisAA <- Biostrings::translate(thisSeq, genetic.code=GENETIC_CODE, if.fuzzy.codon="solve")
+   AAlist[i,c("Class","Family","Strain","Note", "Number","Name","AAfragment")] <- c(BBmisc::explode(thisID, sep=","),as.character(thisAA))
+ }
> 
> #'The generateFragments function
> #'===================
> # This function generates all possible fragments of a given length from the AA sequences
> generateFragments <- function(minLength,maxLength,frequency=1) {
+   # Generate a table to store all AA sequences
+   fragList <- data.frame(Class=character(),
+                           Family=character(),
+                           Strain=character(),
+                           Note=character(),
+                           Number=character(),
+                           Name=character(),
+                           AAstart=integer(),
+                           AAstop=integer(),
+                           AAfragment=character(),
+                           stringsAsFactors = FALSE)    
+   
+   # function to generate all possible fragments of a given length from the AA sequences
+   makeAllFrags <- function(k){
+       thisFullAA <- AAlist[k,"AAfragment"]
+       count = length(fragList[,1])+1
+       for (l in seq(1,(width(thisFullAA)-minLength),frequency)){
+         for (m in (l+minLength-1):(min(l+maxLength-1,width(thisFullAA)))){
+           #Truncate string to the relevant fragment:
+           thisFragment <- substr(thisFullAA,l,m) 
+           #Take away any sequence that starts with a start codon ATG:
+           if (substr(thisFragment,1,1)!="M") { 
+           fragList[count,c("Class","Family","Strain","Note","Number",
+                           "Name","AAstart","AAstop",
+                           "AAfragment")] <- c(AAlist[k,c("Class","Family","Strain",
+                                                           "Note","Number","Name")],l,m,thisFragment) 
+           ## Inserts the fragment with information into the new data frame 
+             count <- count +1
+           }
+         }
+       }
+       return(fragList)
+     }
+ 
+   fragList <- do.call(rbind,mclapply(1:length(AAlist[,1]),makeAllFrags, 
+                                     mc.preschedule = TRUE, mc.cores = detectCores()))
+ 
+   #Control if any sequences contain non-AA characters and save them into a separate list
+   discardList <- fragList[grep("[[:punct:]|X]",fragList[,"AAfragment"]),]
+ 
+   #Remove any sequence containing non AA characters
+   fragList <- fragList[grep("[[:punct:]|X]",fragList[,"AAfragment"], invert = TRUE),] 
+ 
+   #Sort the fragments, find unique strings and count number of duplicates
+   sortedFragments <- rev(sort(table(fragList[,"AAfragment"])))
+ 
+   # print the number of unique fragments
+   print(paste("Number of unique fragments:",length(unique(fragList[,"AAfragment"])), sep=" "))
+ 
+   #Run the AAtoDNA function to convert all AA sequences to human codon-optimized DNA sequences
+   row.names(sortedFragments) <- mclapply(row.names(sortedFragments), fullOPT=FALSE, species="hsa", 
+                           AAtoDNA, mc.preschedule = TRUE, mc.set.seed = TRUE,
+                           mc.silent = FALSE, mc.cores = detectCores(), mc.cleanup = TRUE) #
+   # sort the fragments list
+   sortedFragments <- sortedFragments[order(row.names(sortedFragments))]
+ 
+   print(paste("Number of unique fragments after conversion:",length(unique(row.names(sortedFragments))), sep=" "))
+ 
+   return(sortedFragments)
+ }
> 
> #'Execution of the function
> #'===================
> 
> sortedFragments.14aa <- generateFragments(14,14,1)
> 
> #'Add the overhangs for amplication PCR and Gibson assembly into the AAV plasmid
> fivePrime <- tolower("AACCTCCAGAGAGGCAACGCT")
> threePrime <- tolower("GCCAGACAAGCAGCTACCGCA")
> row.names(sortedFragments.14aa) <- paste(fivePrime,row.names(sortedFragments.14aa),
+                                          threePrime, sep = "")
> 
> # print the number of unique fragments
> print(paste("Number of unique fragments:",length(unique(names(sortedFragments.14aa))), sep=" "))
[1] "Number of unique fragments: 44705"
> 
> sortedFragments.14aa.G4S <- generateFragments(14,14,3)
> sortedFragments.14aa.A5 <- sortedFragments.14aa.G4S
> 
> #'Add the overhangs including G4S spacers for amplication PCR and Gibson assembly into the AAV plasmid
> 
> fivePrime <- tolower("AACCTCCAGAGAGGCAACGGAGGCGGAGGAAGT")
> threePrime <- tolower("GGAGGCGGCGGAAGCAGACAAGCAGCTACCGCA")
> row.names(sortedFragments.14aa.G4S) <- paste(fivePrime,row.names(sortedFragments.14aa.G4S),
+                                              threePrime, sep = "")
> 
> #'Add the overhangs including A5 spacers for amplication PCR and Gibson assembly into the AAV plasmid
> 
> fivePrime <- tolower("AACCTCCAGAGAGGCAACGCTGCTGCAGCAGCC")
> threePrime <- tolower("GCAGCTGCAGCTGCCAGACAAGCAGCTACCGCA")
> row.names(sortedFragments.14aa.A5) <- paste(fivePrime,row.names(sortedFragments.14aa.A5),
+                                             threePrime, sep = "")
> 
> print(paste("Number of unique fragments:",length(unique(names(sortedFragments.14aa.G4S))), sep=" "))
[1] "Number of unique fragments: 15792"
> print(paste("Number of unique fragments:",length(unique(names(sortedFragments.14aa.A5))), sep=" "))
[1] "Number of unique fragments: 15792"
> 
> #'Generate 22aa fragments
> 
> sortedFragments.22aa <- generateFragments(22,22,3)
> 
> #'Add the overhangs for amplication PCR and Gibson assembly into the AAV plasmid
> 
> fivePrime <- tolower("AACCTCCAGAGAGGCAACGCT")
> threePrime <- tolower("GCCAGACAAGCAGCTACCGCA")
> row.names(sortedFragments.22aa) <- paste(fivePrime,row.names(sortedFragments.22aa),
+                                          threePrime, sep = "")
> 
> print(paste("Number of unique fragments:",length(unique(names(sortedFragments.22aa))), sep=" "))
[1] "Number of unique fragments: 16054"
> 
> #'Merge all separate fragment lists into one complete list
> sortedFragments <- c(sortedFragments.22aa,sortedFragments.14aa,
+                      sortedFragments.14aa.A5,sortedFragments.14aa.G4S)
> 
> print(paste("Number of unique fragments:",length(unique(names(sortedFragments))), sep=" "))
[1] "Number of unique fragments: 92343"
> 
> write.table(c("Sequence",unique(names(sortedFragments))),
+             "0_data/SortedFragments_all.txt",row.names=F,col.names=F,quote=F,sep="\t")
> 
> print(Sys.time()-strt)
Time difference of 53.65394 secs
> 
> devtools::session_info()
─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.4.1 (2024-06-14)
 os       Rocky Linux 9.4 (Blue Onyx)
 system   x86_64, linux-gnu
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Stockholm
 date     2024-10-18
 pandoc   NA (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package              * version date (UTC) lib source
 abind                  1.4-5   2016-07-21 [1] CRAN (R 4.4.1)
 ade4                   1.7-22  2023-02-06 [1] CRAN (R 4.4.1)
 backports              1.5.0   2024-05-23 [1] CRAN (R 4.4.1)
 base64enc              0.1-3   2015-07-28 [2] CRAN (R 4.4.1)
 BBmisc                 1.13    2022-09-29 [1] CRAN (R 4.4.1)
 Biobase              * 2.64.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 BiocGenerics         * 0.50.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 BiocParallel         * 1.38.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 Biostrings           * 2.72.1  2024-06-02 [1] Bioconductor 3.19 (R 4.4.1)
 bitops                 1.0-8   2024-07-29 [1] CRAN (R 4.4.1)
 cachem                 1.1.0   2024-05-16 [2] CRAN (R 4.4.1)
 checkmate              2.3.2   2024-07-29 [1] CRAN (R 4.4.1)
 cli                    3.6.3   2024-06-21 [2] CRAN (R 4.4.1)
 cluster                2.1.6   2023-12-01 [1] CRAN (R 4.4.1)
 codetools              0.2-20  2024-03-31 [1] CRAN (R 4.4.1)
 colorspace             2.1-1   2024-07-26 [1] CRAN (R 4.4.1)
 crayon                 1.5.3   2024-06-20 [2] CRAN (R 4.4.1)
 data.table             1.16.0  2024-08-27 [1] CRAN (R 4.4.1)
 DelayedArray           0.30.1  2024-05-07 [1] Bioconductor 3.19 (R 4.4.1)
 deldir                 2.0-4   2024-02-28 [1] CRAN (R 4.4.1)
 devtools             * 2.4.5   2022-10-11 [1] CRAN (R 4.4.1)
 digest                 0.6.37  2024-08-19 [2] CRAN (R 4.4.1)
 dplyr                  1.1.4   2023-11-17 [1] CRAN (R 4.4.1)
 ellipsis               0.3.2   2021-04-29 [2] CRAN (R 4.4.1)
 evaluate               0.24.0  2024-06-10 [1] CRAN (R 4.3.1)
 fansi                  1.0.6   2023-12-08 [2] CRAN (R 4.4.1)
 fastmap                1.2.0   2024-05-15 [2] CRAN (R 4.4.1)
 foreign                0.8-87  2024-06-26 [1] CRAN (R 4.4.1)
 Formula                1.2-5   2023-02-24 [1] CRAN (R 4.4.1)
 fs                     1.6.4   2024-04-25 [2] CRAN (R 4.4.1)
 GeneGA               * 1.54.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 generics               0.1.3   2022-07-05 [1] CRAN (R 4.4.1)
 GenomeInfoDb         * 1.40.1  2024-05-24 [1] Bioconductor 3.19 (R 4.4.1)
 GenomeInfoDbData       1.2.12  2024-09-05 [1] Bioconductor
 GenomicAlignments    * 1.40.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 GenomicRanges        * 1.56.1  2024-06-12 [1] Bioconductor 3.19 (R 4.4.1)
 ggplot2                3.5.1   2024-04-23 [1] CRAN (R 4.4.1)
 glue                   1.7.0   2024-01-09 [2] CRAN (R 4.4.1)
 gridExtra              2.3     2017-09-09 [1] CRAN (R 4.4.1)
 gtable                 0.3.5   2024-04-22 [1] CRAN (R 4.4.1)
 hash                 * 2.2.6.3 2023-08-19 [1] CRAN (R 4.4.1)
 Hmisc                * 5.1-3   2024-05-28 [1] CRAN (R 4.4.1)
 htmlTable              2.4.3   2024-07-21 [1] CRAN (R 4.4.1)
 htmltools              0.5.8.1 2024-04-04 [2] CRAN (R 4.4.1)
 htmlwidgets            1.6.4   2023-12-06 [2] CRAN (R 4.4.1)
 httpuv                 1.6.15  2024-03-26 [2] CRAN (R 4.4.1)
 httr                   1.4.7   2023-08-15 [1] CRAN (R 4.3.1)
 hwriter                1.3.2.1 2022-04-08 [1] CRAN (R 4.4.1)
 interp                 1.1-6   2024-01-26 [1] CRAN (R 4.4.1)
 IRanges              * 2.38.1  2024-07-03 [1] Bioconductor 3.19 (R 4.4.1)
 jpeg                   0.1-10  2022-11-29 [1] CRAN (R 4.4.1)
 jsonlite               1.8.8   2023-12-04 [1] CRAN (R 4.3.1)
 kableExtra           * 1.4.0   2024-01-24 [1] CRAN (R 4.4.1)
 knitr                  1.48    2024-07-07 [1] CRAN (R 4.3.1)
 later                  1.3.2   2023-12-06 [2] CRAN (R 4.4.1)
 lattice                0.22-6  2024-03-20 [1] CRAN (R 4.4.1)
 latticeExtra           0.6-30  2022-07-04 [1] CRAN (R 4.4.1)
 lifecycle              1.0.4   2023-11-07 [2] CRAN (R 4.4.1)
 magrittr               2.0.3   2022-03-30 [2] CRAN (R 4.4.1)
 MASS                   7.3-61  2024-06-13 [1] CRAN (R 4.4.1)
 Matrix                 1.7-0   2024-04-26 [1] CRAN (R 4.4.1)
 MatrixGenerics       * 1.16.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 matrixStats          * 1.4.1   2024-09-08 [1] CRAN (R 4.4.1)
 memoise                2.0.1   2021-11-26 [2] CRAN (R 4.4.1)
 mime                   0.12    2021-09-28 [1] CRAN (R 4.3.1)
 miniUI                 0.1.1.1 2018-05-18 [2] CRAN (R 4.4.1)
 munsell                0.5.1   2024-04-01 [1] CRAN (R 4.4.1)
 nnet                   7.3-19  2023-05-03 [1] CRAN (R 4.4.1)
 pillar                 1.9.0   2023-03-22 [2] CRAN (R 4.4.1)
 pkgbuild               1.4.4   2024-03-17 [2] CRAN (R 4.4.1)
 pkgconfig              2.0.3   2019-09-22 [2] CRAN (R 4.4.1)
 pkgload                1.4.0   2024-06-28 [2] CRAN (R 4.4.1)
 png                    0.1-8   2022-11-29 [1] CRAN (R 4.4.1)
 profvis                0.3.8   2023-05-02 [2] CRAN (R 4.4.1)
 promises               1.3.0   2024-04-05 [2] CRAN (R 4.4.1)
 purrr                  1.0.2   2023-08-10 [2] CRAN (R 4.4.1)
 pwalign                1.0.0   2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 R6                     2.5.1   2021-08-19 [1] CRAN (R 4.3.1)
 RColorBrewer           1.1-3   2022-04-03 [1] CRAN (R 4.4.1)
 Rcpp                   1.0.13  2024-07-17 [2] CRAN (R 4.4.1)
 remotes                2.5.0   2024-03-17 [2] CRAN (R 4.4.1)
 rlang                  1.1.4   2024-06-04 [2] CRAN (R 4.4.1)
 rmarkdown              2.28    2024-08-17 [2] CRAN (R 4.4.1)
 rpart                  4.1.23  2023-12-05 [1] CRAN (R 4.4.1)
 Rsamtools            * 2.20.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 rstudioapi             0.16.0  2024-03-24 [2] CRAN (R 4.4.1)
 S4Arrays               1.4.1   2024-05-20 [1] Bioconductor 3.19 (R 4.4.1)
 S4Vectors            * 0.42.1  2024-07-03 [1] Bioconductor 3.19 (R 4.4.1)
 scales                 1.3.0   2023-11-28 [1] CRAN (R 4.4.1)
 seqinr               * 4.2-36  2023-12-08 [1] CRAN (R 4.4.1)
 sessioninfo            1.2.2   2021-12-06 [2] CRAN (R 4.4.1)
 shiny                  1.9.1   2024-08-01 [2] CRAN (R 4.4.1)
 ShortRead            * 1.62.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 SparseArray            1.4.8   2024-05-24 [1] Bioconductor 3.19 (R 4.4.1)
 stringi                1.8.4   2024-05-06 [2] CRAN (R 4.4.1)
 stringr                1.5.1   2023-11-14 [2] CRAN (R 4.4.1)
 SummarizedExperiment * 1.34.0  2024-05-01 [1] Bioconductor 3.19 (R 4.4.1)
 svglite                2.1.3   2023-12-08 [1] CRAN (R 4.4.1)
 systemfonts            1.1.0   2024-05-15 [2] CRAN (R 4.4.1)
 tibble                 3.2.1   2023-03-20 [2] CRAN (R 4.4.1)
 tidyselect             1.2.1   2024-03-11 [1] CRAN (R 4.4.1)
 UCSC.utils             1.0.0   2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 urlchecker             1.0.1   2021-11-30 [2] CRAN (R 4.4.1)
 usethis              * 3.0.0   2024-07-29 [2] CRAN (R 4.4.1)
 utf8                   1.2.4   2023-10-22 [2] CRAN (R 4.4.1)
 vctrs                  0.6.5   2023-12-01 [2] CRAN (R 4.4.1)
 viridisLite            0.4.2   2023-05-02 [1] CRAN (R 4.4.1)
 xfun                   0.47    2024-08-17 [1] CRAN (R 4.3.1)
 xml2                   1.3.6   2023-12-04 [2] CRAN (R 4.4.1)
 xtable                 1.8-4   2019-04-21 [2] CRAN (R 4.4.1)
 XVector              * 0.44.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 zlibbioc               1.50.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)

 [1] /home/jarost/MyRextensions
 [2] /sw/easybuild_milan/software/R/4.4.1-foss-2023a/lib64/R/library

──────────────────────────────────────────────────────────────────────────────
> 
> proc.time()
   user  system elapsed 
869.982 298.917  64.408 
