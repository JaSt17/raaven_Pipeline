
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #' ---
> #' title: "Reverse mapping of CustumArray oligos to original proteins"
> #' author: "Tomas Bjorklund"
> #' edited by: "Jaro Steindorff"
> #' output: alignedLibraries.rda -- a table of the fragments with their origin protein and the LUTnr, strucutre and sequence.
> #'         This workflow identifies correct fragments from the Cre-recombined AAV plasmid library and aligns them to the CustumArray ordered nucleotide fragments using Blastn.
> #'         Consistant mutations in each fragment/barcode combination are also registered as is the putity of each barcode.
> #' ---
> 
> #  This will make R-functions such as library() and install.packages() use this directory:
> .libPaths(c('~/MyRextensions', .libPaths()))
> 
> suppressPackageStartupMessages(library(data.table))
> suppressPackageStartupMessages(library(ShortRead))
> suppressPackageStartupMessages(library(Hmisc))
> suppressPackageStartupMessages(library(GeneGA))
> suppressPackageStartupMessages(library(devtools))
> suppressPackageStartupMessages(library(kableExtra))
> suppressPackageStartupMessages(library(parallel))
> 
> # start timer
> strt<-Sys.time()
> 
> #Override the GeneCodon function with local version containing human codons
> source(file.path("functions", "GeneCodon.R"))
> unlockBinding("GeneCodon", as.environment("package:GeneGA"))
> assign("GeneCodon", GeneCodon, as.environment("package:GeneGA"))
> 
> #'Load sequences
> #'===================
> LUT.dna <- read.table("0_data/SortedFragments_all.txt",
+                       header = TRUE, skip = 0, sep="\t",stringsAsFactors = FALSE, fill=TRUE)
> LUT.dna <- data.table(LUT.dna)
> 
> #'Remove constitutive backbone sequences
> #'===================
> invisible(LUT.dna[,Sequence:=gsub("aacctccagagaggcaacg","",Sequence)])
> invisible(LUT.dna[,Sequence:=gsub("cagacaagcagctaccgca","",Sequence)])
> # set the sequence to upper case
> invisible(LUT.dna[,Sequence:=toupper(Sequence)])
> # set the key to the sequence
> setkey(LUT.dna, "Sequence")
> # remove duplicates
> LUT.dna <- unique(LUT.dna)
> # create a unqie number for each sequence
> LUT.dna$LUTnr <- make.names(seq(nrow(LUT.dna)), unique=TRUE)
> 
> #'Split sequences based on linker and length 
> #'===================
> # 14aaG4S: GAGGCGGAGGAAGT
> LUT.14aaG4S <- LUT.dna[substr(LUT.dna$Sequence,1,14) == "GAGGCGGAGGAAGT"]
> # print the number of reads that match the 14aaG4S
> print(nrow(LUT.14aaG4S))
[1] 15792
> 
> # remaining sequences without 14aaG4S
> LUT.remaining <- LUT.dna[!(substr(LUT.dna$Sequence,1,14) == "GAGGCGGAGGAAGT")]
> # 14aaA5: CTGCTGCAGCAGCC
> LUT.14aaA5 <- LUT.remaining[substr(LUT.remaining$Sequence,1,14) == "CTGCTGCAGCAGCC"]
> # print the number of reads that match the 14aaA5
> print(nrow(LUT.14aaA5))
[1] 15792
> 
> # remaining sequences without 14aaA5
> LUT.remaining <- LUT.remaining[!(substr(LUT.remaining$Sequence,1,14) == "CTGCTGCAGCAGCC")]
> # 22aa: has 70 nucleotides and starts with CT
> LUT.22aa <- LUT.remaining[nchar(LUT.remaining$Sequence) == 70L & 
+                             substr(LUT.remaining$Sequence,1,2) == "CT"]
> # print the number of reads that match the 22aa
> print(nrow(LUT.22aa))
[1] 16054
> 
> # 14aa: has 46 nucleotides and starts with CT
> LUT.14aa <- LUT.remaining[nchar(LUT.remaining$Sequence) == 46L & 
+                             substr(LUT.remaining$Sequence,1,2) == "CT"]
> # print the number of sequences that match the 14aa
> print(nrow(LUT.14aa))
[1] 44705
> 
> # remove the remaining sequences because they dont match any of our 4 structures
> rm(LUT.remaining)
> 
> # set the structure of the sequences
> LUT.dna[LUT.dna$Sequence %in% LUT.14aaG4S$Sequence,"Structure"] <- "14aaG4S"
> LUT.dna[LUT.dna$Sequence %in% LUT.14aaA5$Sequence,"Structure"] <- "14aaA5"
> LUT.dna[LUT.dna$Sequence %in% LUT.22aa$Sequence,"Structure"] <- "22aa"
> LUT.dna[LUT.dna$Sequence %in% LUT.14aa$Sequence,"Structure"] <- "14aa"
> 
> # save the LUT.dna with the structure the sequences and the LUTnr
> save(LUT.dna,file = "0_data/LUTdna.rda")
> 
> #'Trim sequences
> #'===================
> LUT.14aa$Sequence <- substr(LUT.14aa$Sequence,3,44)
> LUT.14aaG4S$Sequence <- substr(LUT.14aaG4S$Sequence,15,56)
> LUT.14aaA5$Sequence <- substr(LUT.14aaA5$Sequence,15,56)
> LUT.22aa$Sequence <- substr(LUT.22aa$Sequence,3,68)
> 
> #'Save fasta files for Bowtie alignments
> #'===================
> LUT.14aa.fa <- tempfile(pattern = "LUT_14aa_", tmpdir = tempdir(), fileext = "fa")
> LUT.14aa.seq = ShortRead(DNAStringSet(LUT.14aa$Sequence), BStringSet(LUT.14aa$LUTnr))
> writeFasta(LUT.14aa.seq,LUT.14aa.fa)
> 
> LUT.14aaG4S.fa <- tempfile(pattern = "LUT_14aaG4s_", tmpdir = tempdir(), fileext = "fa")
> LUT.14aaG4S.seq = ShortRead(DNAStringSet(LUT.14aaG4S$Sequence), BStringSet(LUT.14aaG4S$LUTnr))
> writeFasta(LUT.14aaG4S.seq,LUT.14aaG4S.fa)
> 
> LUT.14aaA5.fa <- tempfile(pattern = "LUT_14aaA5_", tmpdir = tempdir(), fileext = "fa")
> LUT.14aaA5.seq = ShortRead(DNAStringSet(LUT.14aaA5$Sequence), BStringSet(LUT.14aaA5$LUTnr))
> writeFasta(LUT.14aaA5.seq,LUT.14aaA5.fa)
> 
> LUT.22aa.fa <- tempfile(pattern = "LUT_14aaA5_", tmpdir = tempdir(), fileext = "fa")
> LUT.22aa.seq = ShortRead(DNAStringSet(LUT.22aa$Sequence), BStringSet(LUT.22aa$LUTnr))
> writeFasta(LUT.22aa.seq,LUT.22aa.fa)
> 
> #'Build Bowtie index
> #'===================
> # read in the sequneces from the original fasta file
> seqs.original <- readFasta("input/DNA-lib_RetrogradeTransport.fasta")
> 
> # translate the sequences form all RetrogradeTransport sequences to amino acids
> seqs.AA <- Biostrings::translate(sread(seqs.original), genetic.code=GENETIC_CODE, 
+                                  if.fuzzy.codon="error")
> 
> # load the function to convert amino acids to DNA
> source("functions/AAtoDNA.R")
> 
> # convert the amino acids back to DNA but using human specific codons
> seqs.optimized = ShortRead(DNAStringSet(sapply(seqs.AA, function(x) AAtoDNA(x, species="hsa"))), 
+                            BStringSet(gsub("([ ])", "_", ShortRead::id(seqs.original))))
> 
> # write the optimized sequences to a fasta file
> bowtie.fasta <- tempfile(pattern = "bowtie_", tmpdir = tempdir(), fileext = ".fa")
> writeFasta(seqs.optimized,bowtie.fasta)
> 
> # create a temporary file for the bowtie index
> bowtie.idx <- tempfile(pattern = "IDX_bowtie_", tmpdir = tempdir(), fileext = "")
> 
> sys.out <-  system(paste("bowtie2-build",bowtie.fasta,bowtie.idx, "2>&1",  sep = " "), 
+                    intern = TRUE, ignore.stdout = FALSE) 
> 
> 
> #' Align fragments to reference
> #' ============================
> # Function to align sequences and process the results
> align_and_process <- function(fa_file, lut, bowtie_idx) {
+   # Create a temporary file name for Bowtie output
+   name.bowtie <- tempfile(pattern = "bowtie_", tmpdir = tempdir(), fileext = "")
+   
+   # Run Bowtie2 alignment
+   sys.out <- system(paste("bowtie2 --non-deterministic --threads ", detectCores(),
+                           " --very-sensitive -f -a",
+                           " -x ", bowtie_idx, " -U ", fa_file, " -S ", 
+                           name.bowtie, ".sam 2>&1", sep = ""), 
+                     intern = TRUE, ignore.stdout = FALSE)
+   
+   # Run samtools to convert the SAM file to a BAM file
+   command.args <- paste("view -@ ", detectCores(), " -Sb ", name.bowtie, ".sam > ",
+                         name.bowtie, ".bam", sep = "")
+   system2("samtools", args = command.args, stdout = TRUE, stderr = TRUE)
+   
+   # Run samtools to sort the BAM file
+   command.args <- paste("sort -@ ", detectCores(), " ", name.bowtie, ".bam -o ",
+                         name.bowtie, "_sort.bam", sep = "")
+   system2("samtools", args = command.args, stdout = TRUE, stderr = TRUE)
+   
+   # Read the sorted BAM file into a GAlignments object
+   frag_ranges <- readGAlignments(paste(name.bowtie, "_sort.bam", sep = ""), use.names = TRUE)
+   
+   # Return the results as a list
+   list(
+     frag_ranges = frag_ranges,
+     total = length(names(frag_ranges)),
+     unique = length(unique(names(frag_ranges))),
+     lut_unique = length(unique(lut$Sequence))
+   )
+ }
> # run the function for the different libraries
> # Align and process 14aa sequences
> results_14aa <- align_and_process(LUT.14aa.fa, LUT.14aa, bowtie.idx)
> # Align and process 14aaG4S sequences
> results_14aaG4S <- align_and_process(LUT.14aaG4S.fa, LUT.14aaG4S, bowtie.idx)
> # Align and process 14aaA5 sequences
> results_14aaA5 <- align_and_process(LUT.14aaA5.fa, LUT.14aaA5, bowtie.idx)
> # Align and process 22aa sequences
> results_22aa <- align_and_process(LUT.22aa.fa, LUT.22aa, bowtie.idx)
> 
> # Annotate the aligned sequences with their structure
> mcols(results_14aa$frag_ranges)$structure <- "14aa"
> mcols(results_22aa$frag_ranges)$structure <- "22aa"
> mcols(results_14aaA5$frag_ranges)$structure <- "14aaA5"
> mcols(results_14aaG4S$frag_ranges)$structure <- "14aaG4S"
> 
> # Merge all the aligned sequences into one object
> allFragments.ranges <- append(results_14aa$frag_ranges, results_22aa$frag_ranges)
> allFragments.ranges <- append(allFragments.ranges, results_14aaA5$frag_ranges)
> allFragments.ranges <- append(allFragments.ranges, results_14aaG4S$frag_ranges)
> 
> # Annotate the merged sequences with their LUT number
> mcols(allFragments.ranges)$LUTnr <- names(allFragments.ranges)
> # Set the key for the LUT data frame
> setkey(LUT.dna, LUTnr)
> # Annotate the merged sequences with their sequence from the LUT based on the LUT number
> mcols(allFragments.ranges)$Sequence <- LUT.dna[mcols(allFragments.ranges)$LUTnr]$Sequence
> 
> # Save the merged and annotated sequences to a file
> save(allFragments.ranges, file = "0_data/alignedLibraries.rda")
> 
> print("Total execution time:")
[1] "Total execution time:"
> print(Sys.time()-strt)
Time difference of 16.62235 secs
> devtools::session_info()
─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.4.1 (2024-06-14)
 os       Rocky Linux 9.4 (Blue Onyx)
 system   x86_64, linux-gnu
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Stockholm
 date     2024-09-18
 pandoc   NA (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package              * version date (UTC) lib source
 abind                  1.4-5   2016-07-21 [1] CRAN (R 4.4.1)
 ade4                   1.7-22  2023-02-06 [1] CRAN (R 4.4.1)
 backports              1.5.0   2024-05-23 [1] CRAN (R 4.4.1)
 base64enc              0.1-3   2015-07-28 [2] CRAN (R 4.4.1)
 Biobase              * 2.64.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 BiocGenerics         * 0.50.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 BiocParallel         * 1.38.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 Biostrings           * 2.72.1  2024-06-02 [1] Bioconductor 3.19 (R 4.4.1)
 bitops                 1.0-8   2024-07-29 [1] CRAN (R 4.4.1)
 cachem                 1.1.0   2024-05-16 [2] CRAN (R 4.4.1)
 checkmate              2.3.2   2024-07-29 [1] CRAN (R 4.4.1)
 cli                    3.6.3   2024-06-21 [2] CRAN (R 4.4.1)
 cluster                2.1.6   2023-12-01 [1] CRAN (R 4.4.1)
 codetools              0.2-20  2024-03-31 [1] CRAN (R 4.4.1)
 colorspace             2.1-1   2024-07-26 [1] CRAN (R 4.4.1)
 crayon                 1.5.3   2024-06-20 [2] CRAN (R 4.4.1)
 data.table           * 1.16.0  2024-08-27 [1] CRAN (R 4.4.1)
 DelayedArray           0.30.1  2024-05-07 [1] Bioconductor 3.19 (R 4.4.1)
 deldir                 2.0-4   2024-02-28 [1] CRAN (R 4.4.1)
 devtools             * 2.4.5   2022-10-11 [1] CRAN (R 4.4.1)
 digest                 0.6.37  2024-08-19 [2] CRAN (R 4.4.1)
 dplyr                  1.1.4   2023-11-17 [1] CRAN (R 4.4.1)
 ellipsis               0.3.2   2021-04-29 [2] CRAN (R 4.4.1)
 evaluate               0.24.0  2024-06-10 [1] CRAN (R 4.3.1)
 fansi                  1.0.6   2023-12-08 [2] CRAN (R 4.4.1)
 fastmap                1.2.0   2024-05-15 [2] CRAN (R 4.4.1)
 foreign                0.8-87  2024-06-26 [1] CRAN (R 4.4.1)
 Formula                1.2-5   2023-02-24 [1] CRAN (R 4.4.1)
 fs                     1.6.4   2024-04-25 [2] CRAN (R 4.4.1)
 GeneGA               * 1.54.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 generics               0.1.3   2022-07-05 [1] CRAN (R 4.4.1)
 GenomeInfoDb         * 1.40.1  2024-05-24 [1] Bioconductor 3.19 (R 4.4.1)
 GenomeInfoDbData       1.2.12  2024-09-05 [1] Bioconductor
 GenomicAlignments    * 1.40.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 GenomicRanges        * 1.56.1  2024-06-12 [1] Bioconductor 3.19 (R 4.4.1)
 ggplot2                3.5.1   2024-04-23 [1] CRAN (R 4.4.1)
 glue                   1.7.0   2024-01-09 [2] CRAN (R 4.4.1)
 gridExtra              2.3     2017-09-09 [1] CRAN (R 4.4.1)
 gtable                 0.3.5   2024-04-22 [1] CRAN (R 4.4.1)
 hash                 * 2.2.6.3 2023-08-19 [1] CRAN (R 4.4.1)
 Hmisc                * 5.1-3   2024-05-28 [1] CRAN (R 4.4.1)
 htmlTable              2.4.3   2024-07-21 [1] CRAN (R 4.4.1)
 htmltools              0.5.8.1 2024-04-04 [2] CRAN (R 4.4.1)
 htmlwidgets            1.6.4   2023-12-06 [2] CRAN (R 4.4.1)
 httpuv                 1.6.15  2024-03-26 [2] CRAN (R 4.4.1)
 httr                   1.4.7   2023-08-15 [1] CRAN (R 4.3.1)
 hwriter                1.3.2.1 2022-04-08 [1] CRAN (R 4.4.1)
 interp                 1.1-6   2024-01-26 [1] CRAN (R 4.4.1)
 IRanges              * 2.38.1  2024-07-03 [1] Bioconductor 3.19 (R 4.4.1)
 jpeg                   0.1-10  2022-11-29 [1] CRAN (R 4.4.1)
 jsonlite               1.8.8   2023-12-04 [1] CRAN (R 4.3.1)
 kableExtra           * 1.4.0   2024-01-24 [1] CRAN (R 4.4.1)
 knitr                  1.48    2024-07-07 [1] CRAN (R 4.3.1)
 later                  1.3.2   2023-12-06 [2] CRAN (R 4.4.1)
 lattice                0.22-6  2024-03-20 [1] CRAN (R 4.4.1)
 latticeExtra           0.6-30  2022-07-04 [1] CRAN (R 4.4.1)
 lifecycle              1.0.4   2023-11-07 [2] CRAN (R 4.4.1)
 magrittr               2.0.3   2022-03-30 [2] CRAN (R 4.4.1)
 MASS                   7.3-61  2024-06-13 [1] CRAN (R 4.4.1)
 Matrix                 1.7-0   2024-04-26 [1] CRAN (R 4.4.1)
 MatrixGenerics       * 1.16.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 matrixStats          * 1.4.1   2024-09-08 [1] CRAN (R 4.4.1)
 memoise                2.0.1   2021-11-26 [2] CRAN (R 4.4.1)
 mime                   0.12    2021-09-28 [1] CRAN (R 4.3.1)
 miniUI                 0.1.1.1 2018-05-18 [2] CRAN (R 4.4.1)
 munsell                0.5.1   2024-04-01 [1] CRAN (R 4.4.1)
 nnet                   7.3-19  2023-05-03 [1] CRAN (R 4.4.1)
 pillar                 1.9.0   2023-03-22 [2] CRAN (R 4.4.1)
 pkgbuild               1.4.4   2024-03-17 [2] CRAN (R 4.4.1)
 pkgconfig              2.0.3   2019-09-22 [2] CRAN (R 4.4.1)
 pkgload                1.4.0   2024-06-28 [2] CRAN (R 4.4.1)
 png                    0.1-8   2022-11-29 [1] CRAN (R 4.4.1)
 profvis                0.3.8   2023-05-02 [2] CRAN (R 4.4.1)
 promises               1.3.0   2024-04-05 [2] CRAN (R 4.4.1)
 purrr                  1.0.2   2023-08-10 [2] CRAN (R 4.4.1)
 pwalign                1.0.0   2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 R6                     2.5.1   2021-08-19 [1] CRAN (R 4.3.1)
 RColorBrewer           1.1-3   2022-04-03 [1] CRAN (R 4.4.1)
 Rcpp                   1.0.13  2024-07-17 [2] CRAN (R 4.4.1)
 remotes                2.5.0   2024-03-17 [2] CRAN (R 4.4.1)
 rlang                  1.1.4   2024-06-04 [2] CRAN (R 4.4.1)
 rmarkdown              2.28    2024-08-17 [2] CRAN (R 4.4.1)
 rpart                  4.1.23  2023-12-05 [1] CRAN (R 4.4.1)
 Rsamtools            * 2.20.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 rstudioapi             0.16.0  2024-03-24 [2] CRAN (R 4.4.1)
 S4Arrays               1.4.1   2024-05-20 [1] Bioconductor 3.19 (R 4.4.1)
 S4Vectors            * 0.42.1  2024-07-03 [1] Bioconductor 3.19 (R 4.4.1)
 scales                 1.3.0   2023-11-28 [1] CRAN (R 4.4.1)
 seqinr               * 4.2-36  2023-12-08 [1] CRAN (R 4.4.1)
 sessioninfo            1.2.2   2021-12-06 [2] CRAN (R 4.4.1)
 shiny                  1.9.1   2024-08-01 [2] CRAN (R 4.4.1)
 ShortRead            * 1.62.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 SparseArray            1.4.8   2024-05-24 [1] Bioconductor 3.19 (R 4.4.1)
 stringi                1.8.4   2024-05-06 [2] CRAN (R 4.4.1)
 stringr                1.5.1   2023-11-14 [2] CRAN (R 4.4.1)
 SummarizedExperiment * 1.34.0  2024-05-01 [1] Bioconductor 3.19 (R 4.4.1)
 svglite                2.1.3   2023-12-08 [1] CRAN (R 4.4.1)
 systemfonts            1.1.0   2024-05-15 [2] CRAN (R 4.4.1)
 tibble                 3.2.1   2023-03-20 [2] CRAN (R 4.4.1)
 tidyselect             1.2.1   2024-03-11 [1] CRAN (R 4.4.1)
 UCSC.utils             1.0.0   2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 urlchecker             1.0.1   2021-11-30 [2] CRAN (R 4.4.1)
 usethis              * 3.0.0   2024-07-29 [2] CRAN (R 4.4.1)
 utf8                   1.2.4   2023-10-22 [2] CRAN (R 4.4.1)
 vctrs                  0.6.5   2023-12-01 [2] CRAN (R 4.4.1)
 viridisLite            0.4.2   2023-05-02 [1] CRAN (R 4.4.1)
 xfun                   0.47    2024-08-17 [1] CRAN (R 4.3.1)
 xml2                   1.3.6   2023-12-04 [2] CRAN (R 4.4.1)
 xtable                 1.8-4   2019-04-21 [2] CRAN (R 4.4.1)
 XVector              * 0.44.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 zlibbioc               1.50.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)

 [1] /home/jarost/MyRextensions
 [2] /sw/easybuild_milan/software/R/4.4.1-foss-2023a/lib64/R/library

──────────────────────────────────────────────────────────────────────────────
> 
> 
> proc.time()
   user  system elapsed 
 57.519   3.962  59.128 
