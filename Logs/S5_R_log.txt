
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #' ---
> #' title: "Barcoded extraction and reduction from RNA samples"
> #' author: "Tomas Bjorklund"
> #' edited by: "Jaro Steindorff"
> #' output: found.***.rds -- a table of the found fragments in the RNA samples given by the list in the input/loadlist.txt. 
> #'         This workflow extracts the barcode and then reducedes them using the starcode algorithm. They get 
> #' ---
> 
> #  This will make R-functions such as library() and install.packages() use this directory:
> .libPaths(c('~/MyRextensions', .libPaths()))
> 
> #load libraries
> suppressPackageStartupMessages(library(knitr))
> suppressPackageStartupMessages(library(ShortRead))
> suppressPackageStartupMessages(library(ggplot2))
> suppressPackageStartupMessages(library(ggbio))
> suppressPackageStartupMessages(library(beanplot))
> suppressPackageStartupMessages(library(parallel))
> suppressPackageStartupMessages(library(doParallel))
> suppressPackageStartupMessages(library(data.table))
> suppressPackageStartupMessages(library(scales))
> suppressPackageStartupMessages(library(formatR))
> suppressPackageStartupMessages(library(BSgenome))
> suppressPackageStartupMessages(library(Rsamtools))
> suppressPackageStartupMessages(library(rtracklayer))
> suppressPackageStartupMessages(library(GenomicFeatures))
> suppressPackageStartupMessages(library(GenomicAlignments))
> suppressPackageStartupMessages(library(GenomicRanges))
> suppressPackageStartupMessages(library(biovizBase))
> suppressPackageStartupMessages(library(Gviz))
> suppressPackageStartupMessages(library(plyr))
> suppressPackageStartupMessages(library(devtools))
> suppressPackageStartupMessages(library(kableExtra))
> 
> 
> #' Analyze tissue RNA
> #' ============================
> # start the timer
> strt <- Sys.time()
> # load the data
> load("0_data/multipleContfragmentsComplete.rda") # "output.Table" output from S4: Table of all fragments reads with their corresponding barcodes
> load("0_data/alignedLibraries.rda") # "allFragments.ranges" output from S3: GAlignment object with information about the fragments
> load("0_data/LUTdna.rda") # "LUT.dna" LUT table with Sequence LUTnr and Structure
> 
> # load the list of the RNA samples that should be analyzed
> load.list <- read.table("input/loadlist.txt", header = FALSE, skip = 0, sep="\t",
+                         stringsAsFactors = FALSE, fill=TRUE)
> # set the path to the fastq files
> dataDir <- "0_data/fastq_files"
> colnames(load.list) <- c("Name", "BaseName","GroupName")
> # create a empty log table
> log.table <- data.table(Name="Name",
+                         Reads=NA,
+                         BCs=NA,
+                         allBCs=NA, # all barcodes
+                         scBCs=NA,
+                         SCdroppedBC=NA) # number of barcodes dropped by Starcode) # Starcode reduced barcodes
> 
> # function to analyze tissue by their index number
> analyzeTissue <- function(indexNr) {
+   
+   # Extract the base name for the file corresponding to the provided index
+   baseName <- load.list$Name[indexNr]
+   
+ 
+   #' If necessary, split the base name into components using '/' as a delimiter to separate subdirectories
+   #' ============================
+   nameComponents <- unlist(strsplit(baseName, "/"))
+   # Remove any NA values from the name components
+   nameComponents <- nameComponents[!is.na(nameComponents)]
+   # Determine the input file paths based on the number of name components
+   if (length(nameComponents) == 2) {
+     # If the name has two components, construct the path to the files within the subdirectory
+     in.files <- list.files(
+       path = file.path(gsub("([\\])", "", dataDir), nameComponents[1]), 
+       pattern = paste0(nameComponents[2], "*"), 
+       full.names = TRUE
+     )
+   } else {
+     # If the name has a single component, search for files directly within dataDir
+     in.files <- list.files(
+       path = gsub("([\\])", "", dataDir), 
+       pattern = paste0(nameComponents[1], "*"), 
+       full.names = TRUE
+     )
+   }
+   
+   # Identify the files corresponding to P5 (e.g., _1 in the name) because the barcodes are in the P5 reads
+   in.name.P5 <- in.files[grep("_1", in.files)]
+ 
+   # add the name to the log table and set the output name
+   log.table$Name <- load.list$Name[indexNr]
+   log.table$Reads <- length(readFastq(in.name.P5))
+   name.out <- log.table$Name
+ 
+ 
+   # Extraction of barcodes
+   # ============================
+   # create a temporary file for the output
+   out.name.BC <- tempfile(pattern = "BC_", tmpdir = tempdir(), fileext = ".fastq.gz")
+ 
+   # run the bbduk2 command to extract barcodes fromt the reads
+   sys.out <- system(paste("~/bbmap/bbduk2.sh overwrite=true k=12 mink=12 hammingdistance=2 ",
+                           "findbestmatch=t trd=t rcomp=f skipr2=t findbestmatch=f qhdist=0 ",
+                           "minavgquality=0 ordered=t maxns=0 minlength=18 maxlength=22 threads=", 
+                           detectCores()," in=", shQuote(in.name.P5), " out=", out.name.BC,
+                           " lliteral=", "GGCCTAGCGGCCGCTTTACTT", " rliteral=", "ATAACTTCGTATA",
+                           " 2>&1", sep = ""), intern = TRUE, ignore.stdout = FALSE) 
+                           
+   # save the Barcode extraction result in the log table
+   log.table$BCs <- strsplit(sys.out[grep("Result:",sys.out)],split = "\t")[[1]][2]
+   # read the barcodes
+   reads.BC <- readFastq(out.name.BC)
+   # create a table with the barcodes and the ID
+   barcodeTable <- data.table(ID=as.character(ShortRead::id(reads.BC)), 
+                             BC=as.character(sread(reads.BC)), key="BC")
+ 
+ 
+   # Starcode based barcode reduction
+   # ============================
+   # create a temporary file for the output
+   out.name.BC.star <- tempfile(pattern = "BCsc_", tmpdir = tempdir(), fileext = ".txt")
+   # run the starcode command to reduce the barcodes
+   system(paste("gunzip -c ",out.name.BC," | starcode -t ",detectCores()-1," --print-clusters -d",
+               1," -r5 -q -o ", out.name.BC.star, " 2>&1", sep = ""), 
+         intern = TRUE, ignore.stdout = FALSE)
+   # create a table with the reduced barcodes
+   table.BC.sc <- data.table(read.table(out.name.BC.star, header = FALSE, row.names = 1, skip = 0, sep="\t",
+                                       stringsAsFactors = FALSE, fill=FALSE),keep.rownames=TRUE, key="rn") 
+   # remove the second column
+   table.BC.sc[,V2 := NULL]
+   # split the third column by comma in respect to the grouping by their Starcode reduced barcode
+   table.BC.sc <- table.BC.sc[, strsplit(as.character(V3),",",fixed=TRUE), by=rn]
+   # set the column names to BC and scBC
+   setnames(table.BC.sc,c("V1","rn"),c("BC","scBC"))
+ 
+ 
+   # Replacing barcodes with Starcode reduced versions
+   # ============================
+   # set the key to BC
+   setkey(table.BC.sc,BC)
+   # subset the barcodeTable with the reduced barcodes 
+   barcodeTable <- barcodeTable[table.BC.sc,nomatch=0]
+   # set the column names to oldBC and BC
+   setnames(barcodeTable,c("BC","scBC"),c("oldBC","BC"))
+   # set the key to BC
+   setkey(barcodeTable,BC)
+ 
+   # save the number of unqiue old barcodes and remaining barcodes in the log table
+   log.table$allBCs <- length(unique(barcodeTable$oldBC))
+   log.table$scBCs <- length(unique(barcodeTable$BC))
+   log.table$SCdroppedBC <- log.table$allBCs - log.table$scBCs
+ 
+   # delete the old barcodes column
+   invisible(barcodeTable[,oldBC:=NULL])
+   # set the key of the output table to BC
+   setkey(output.Table,"BC")
+ 
+   # reorganize the barcodeTable to to have the BC and the RNA count
+   BCcount <- data.table(as.data.frame(rev(sort(table(barcodeTable$BC))), row.names = "Var1"), keep.rownames = TRUE)
+   setnames(BCcount,colnames(BCcount),c("BC","RNAcount"))
+   # set the key to BC
+   setkey(BCcount,"BC")
+   # extract only BC that are in BCcount
+   foundFrags <- output.Table[BCcount,nomatch=0]
+   # set the key of foundFrags and LUT.dna to LUTnr
+   setkey(foundFrags,"LUTnr")
+   setkey(LUT.dna,"LUTnr")
+   # extract only the fragments that are in foundFrags and the LUT.dna
+   foundFrags <- foundFrags[LUT.dna,nomatch=0]
+   # change the name to Sequence and fragement
+   setnames(foundFrags,"Sequence","fragment")
+   # delete the Name and i.Structure column
+   foundFrags[,c("Names","i.Structure"):=NULL]
+ 
+   # function to to index fragments that are found multiple times since they are the same in multiple sequences from the known Retrograde_transport seq
+   matchRange <- function(idxFrag) {
+     matchRanges <- which(mcols(allFragments.ranges)$Sequence == foundFrags$fragment[idxFrag])
+     return(cbind(matchRanges,idxFrag))
+   }
+ 
+   # create a list of the matches
+   match.ranges.list <- mclapply(1:nrow(foundFrags), matchRange, mc.preschedule = TRUE, 
+                                 mc.cores = detectCores())
+   # create a matrix of the matches
+   match.ranges <- do.call(rbind, match.ranges.list)
+   # create a list of the found fragments
+   foundFragments.ranges <- allFragments.ranges[match.ranges[,1]]
+   # if there are more than one match, then save the found fragments
+   if (ncol(match.ranges) >= 2) {
+   foundFrags <- foundFrags[match.ranges[,"idxFrag"],]
+   # remove unnecessary columns
+   foundFrags[,c("Reads","fragment","Structure","LUTnr"):=NULL]
+   # add found fragments to the foundFragments.ranges
+   mcols(foundFragments.ranges) <- c(mcols(foundFragments.ranges),foundFrags)
+   # sort them by the RNA count in descending order
+   foundFragments.ranges <- foundFragments.ranges[order(-mcols(foundFragments.ranges)$RNAcount)]
+   # save the found fragments for the sample in the output folder
+   saveRDS(foundFragments.ranges, file=paste("2_output/","found.",name.out,".rds", sep=""), 
+           compress = TRUE)
+   }
+   return(log.table)
+ }
> 
> #'Analysis summary
> #'============================
> # run the analysis for a single tissue
> # log.table <- analyzeTissue(2)
> 
> # run the analysis for all tissues
> log.table <- lapply(1:nrow(load.list), analyzeTissue)
Warning message:
In mclapply(1:nrow(foundFrags), matchRange, mc.preschedule = TRUE,  :
  scheduled cores 2, 3, 8, 11, 15, 16, 17, 18, 22, 35, 48 did not deliver results, all values of the jobs will be affected
> 
> # create a data.table from the log table
> log.df <- do.call(rbind, log.table)
> # save the log table
> saveRDS(log.df, file="S5_log.table.rds", compress = TRUE)
> 
> # cleanup the temp files
> unlink(paste(tempdir(), "/*", sep = ""), recursive = FALSE, force = FALSE) 
> 
> print("Total execution time:")
[1] "Total execution time:"
> print(Sys.time()-strt)
Time difference of 28.20502 mins
> devtools::session_info()
─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.4.1 (2024-06-14)
 os       Rocky Linux 9.4 (Blue Onyx)
 system   x86_64, linux-gnu
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Stockholm
 date     2024-09-17
 pandoc   NA (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package              * version   date (UTC) lib source
 abind                  1.4-5     2016-07-21 [1] CRAN (R 4.4.1)
 AnnotationDbi        * 1.66.0    2024-05-01 [1] Bioconductor 3.19 (R 4.4.1)
 AnnotationFilter       1.28.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 backports              1.5.0     2024-05-23 [1] CRAN (R 4.4.1)
 base64enc              0.1-3     2015-07-28 [2] CRAN (R 4.4.1)
 beanplot             * 1.3.1     2022-04-09 [1] CRAN (R 4.4.1)
 Biobase              * 2.64.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 BiocFileCache          2.12.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 BiocGenerics         * 0.50.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 BiocIO               * 1.14.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 BiocManager            1.30.25   2024-08-28 [1] CRAN (R 4.4.1)
 BiocParallel         * 1.38.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 biomaRt                2.60.1    2024-06-26 [1] Bioconductor 3.19 (R 4.4.1)
 Biostrings           * 2.72.1    2024-06-02 [1] Bioconductor 3.19 (R 4.4.1)
 biovizBase           * 1.52.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 bit                    4.0.5     2022-11-15 [1] CRAN (R 4.4.1)
 bit64                  4.0.5     2020-08-30 [1] CRAN (R 4.4.1)
 bitops                 1.0-8     2024-07-29 [1] CRAN (R 4.4.1)
 blob                   1.2.4     2023-03-17 [1] CRAN (R 4.4.1)
 BSgenome             * 1.72.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 cachem                 1.1.0     2024-05-16 [2] CRAN (R 4.4.1)
 checkmate              2.3.2     2024-07-29 [1] CRAN (R 4.4.1)
 cli                    3.6.3     2024-06-21 [2] CRAN (R 4.4.1)
 cluster                2.1.6     2023-12-01 [1] CRAN (R 4.4.1)
 codetools              0.2-20    2024-03-31 [1] CRAN (R 4.4.1)
 colorspace             2.1-1     2024-07-26 [1] CRAN (R 4.4.1)
 crayon                 1.5.3     2024-06-20 [2] CRAN (R 4.4.1)
 curl                   5.2.2     2024-08-26 [1] CRAN (R 4.3.1)
 data.table           * 1.16.0    2024-08-27 [1] CRAN (R 4.4.1)
 DBI                    1.2.3     2024-06-02 [1] CRAN (R 4.4.1)
 dbplyr                 2.5.0     2024-03-19 [1] CRAN (R 4.4.1)
 DelayedArray           0.30.1    2024-05-07 [1] Bioconductor 3.19 (R 4.4.1)
 deldir                 2.0-4     2024-02-28 [1] CRAN (R 4.4.1)
 devtools             * 2.4.5     2022-10-11 [1] CRAN (R 4.4.1)
 dichromat              2.0-0.1   2022-05-02 [1] CRAN (R 4.4.1)
 digest                 0.6.37    2024-08-19 [2] CRAN (R 4.4.1)
 doParallel           * 1.0.17    2022-02-07 [1] CRAN (R 4.4.1)
 dplyr                  1.1.4     2023-11-17 [1] CRAN (R 4.4.1)
 ellipsis               0.3.2     2021-04-29 [2] CRAN (R 4.4.1)
 ensembldb              2.28.1    2024-08-21 [1] Bioconductor 3.19 (R 4.4.1)
 evaluate               0.24.0    2024-06-10 [1] CRAN (R 4.3.1)
 fansi                  1.0.6     2023-12-08 [2] CRAN (R 4.4.1)
 fastmap                1.2.0     2024-05-15 [2] CRAN (R 4.4.1)
 filelock               1.0.3     2023-12-11 [1] CRAN (R 4.4.1)
 foreach              * 1.5.2     2022-02-02 [1] CRAN (R 4.4.1)
 foreign                0.8-87    2024-06-26 [1] CRAN (R 4.4.1)
 formatR              * 1.14      2023-01-17 [1] CRAN (R 4.4.1)
 Formula                1.2-5     2023-02-24 [1] CRAN (R 4.4.1)
 fs                     1.6.4     2024-04-25 [2] CRAN (R 4.4.1)
 generics               0.1.3     2022-07-05 [1] CRAN (R 4.4.1)
 GenomeInfoDb         * 1.40.1    2024-05-24 [1] Bioconductor 3.19 (R 4.4.1)
 GenomeInfoDbData       1.2.12    2024-09-05 [1] Bioconductor
 GenomicAlignments    * 1.40.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 GenomicFeatures      * 1.56.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 GenomicRanges        * 1.56.1    2024-06-12 [1] Bioconductor 3.19 (R 4.4.1)
 GGally                 2.2.1     2024-02-14 [1] CRAN (R 4.4.1)
 ggbio                * 1.52.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 ggplot2              * 3.5.1     2024-04-23 [1] CRAN (R 4.4.1)
 ggstats                0.6.0     2024-04-05 [1] CRAN (R 4.4.1)
 glue                   1.7.0     2024-01-09 [2] CRAN (R 4.4.1)
 graph                  1.82.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 gridExtra              2.3       2017-09-09 [1] CRAN (R 4.4.1)
 gtable                 0.3.5     2024-04-22 [1] CRAN (R 4.4.1)
 Gviz                 * 1.48.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 Hmisc                  5.1-3     2024-05-28 [1] CRAN (R 4.4.1)
 hms                    1.1.3     2023-03-21 [1] CRAN (R 4.4.1)
 htmlTable              2.4.3     2024-07-21 [1] CRAN (R 4.4.1)
 htmltools              0.5.8.1   2024-04-04 [2] CRAN (R 4.4.1)
 htmlwidgets            1.6.4     2023-12-06 [2] CRAN (R 4.4.1)
 httpuv                 1.6.15    2024-03-26 [2] CRAN (R 4.4.1)
 httr                   1.4.7     2023-08-15 [1] CRAN (R 4.3.1)
 httr2                  1.0.4     2024-09-13 [2] CRAN (R 4.4.1)
 hwriter                1.3.2.1   2022-04-08 [1] CRAN (R 4.4.1)
 interp                 1.1-6     2024-01-26 [1] CRAN (R 4.4.1)
 IRanges              * 2.38.1    2024-07-03 [1] Bioconductor 3.19 (R 4.4.1)
 iterators            * 1.0.14    2022-02-05 [1] CRAN (R 4.4.1)
 jpeg                   0.1-10    2022-11-29 [1] CRAN (R 4.4.1)
 jsonlite               1.8.8     2023-12-04 [1] CRAN (R 4.3.1)
 kableExtra           * 1.4.0     2024-01-24 [1] CRAN (R 4.4.1)
 KEGGREST               1.44.1    2024-06-19 [1] Bioconductor 3.19 (R 4.4.1)
 knitr                * 1.48      2024-07-07 [1] CRAN (R 4.3.1)
 later                  1.3.2     2023-12-06 [2] CRAN (R 4.4.1)
 lattice                0.22-6    2024-03-20 [1] CRAN (R 4.4.1)
 latticeExtra           0.6-30    2022-07-04 [1] CRAN (R 4.4.1)
 lazyeval               0.2.2     2019-03-15 [1] CRAN (R 4.4.1)
 lifecycle              1.0.4     2023-11-07 [2] CRAN (R 4.4.1)
 magrittr               2.0.3     2022-03-30 [2] CRAN (R 4.4.1)
 Matrix                 1.7-0     2024-04-26 [1] CRAN (R 4.4.1)
 MatrixGenerics       * 1.16.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 matrixStats          * 1.4.1     2024-09-08 [1] CRAN (R 4.4.1)
 memoise                2.0.1     2021-11-26 [2] CRAN (R 4.4.1)
 mime                   0.12      2021-09-28 [1] CRAN (R 4.3.1)
 miniUI                 0.1.1.1   2018-05-18 [2] CRAN (R 4.4.1)
 munsell                0.5.1     2024-04-01 [1] CRAN (R 4.4.1)
 nnet                   7.3-19    2023-05-03 [1] CRAN (R 4.4.1)
 OrganismDbi            1.46.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 pillar                 1.9.0     2023-03-22 [2] CRAN (R 4.4.1)
 pkgbuild               1.4.4     2024-03-17 [2] CRAN (R 4.4.1)
 pkgconfig              2.0.3     2019-09-22 [2] CRAN (R 4.4.1)
 pkgload                1.4.0     2024-06-28 [2] CRAN (R 4.4.1)
 plyr                 * 1.8.9     2023-10-02 [1] CRAN (R 4.4.1)
 png                    0.1-8     2022-11-29 [1] CRAN (R 4.4.1)
 prettyunits            1.2.0     2023-09-24 [2] CRAN (R 4.4.1)
 profvis                0.3.8     2023-05-02 [2] CRAN (R 4.4.1)
 progress               1.2.3     2023-12-06 [1] CRAN (R 4.4.1)
 promises               1.3.0     2024-04-05 [2] CRAN (R 4.4.1)
 ProtGenerics           1.36.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 purrr                  1.0.2     2023-08-10 [2] CRAN (R 4.4.1)
 pwalign                1.0.0     2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 R6                     2.5.1     2021-08-19 [1] CRAN (R 4.3.1)
 rappdirs               0.3.3     2021-01-31 [2] CRAN (R 4.4.1)
 RBGL                   1.80.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 RColorBrewer           1.1-3     2022-04-03 [1] CRAN (R 4.4.1)
 Rcpp                   1.0.13    2024-07-17 [2] CRAN (R 4.4.1)
 RCurl                  1.98-1.16 2024-07-11 [1] CRAN (R 4.4.1)
 remotes                2.5.0     2024-03-17 [2] CRAN (R 4.4.1)
 reshape2               1.4.4     2020-04-09 [1] CRAN (R 4.4.1)
 restfulr               0.0.15    2022-06-16 [1] CRAN (R 4.4.1)
 rjson                  0.2.22    2024-08-20 [1] CRAN (R 4.4.1)
 rlang                  1.1.4     2024-06-04 [2] CRAN (R 4.4.1)
 rmarkdown              2.28      2024-08-17 [2] CRAN (R 4.4.1)
 rpart                  4.1.23    2023-12-05 [1] CRAN (R 4.4.1)
 Rsamtools            * 2.20.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 RSQLite                2.3.7     2024-05-27 [1] CRAN (R 4.4.1)
 rstudioapi             0.16.0    2024-03-24 [2] CRAN (R 4.4.1)
 rtracklayer          * 1.64.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 S4Arrays               1.4.1     2024-05-20 [1] Bioconductor 3.19 (R 4.4.1)
 S4Vectors            * 0.42.1    2024-07-03 [1] Bioconductor 3.19 (R 4.4.1)
 scales               * 1.3.0     2023-11-28 [1] CRAN (R 4.4.1)
 sessioninfo            1.2.2     2021-12-06 [2] CRAN (R 4.4.1)
 shiny                  1.9.1     2024-08-01 [2] CRAN (R 4.4.1)
 ShortRead            * 1.62.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 SparseArray            1.4.8     2024-05-24 [1] Bioconductor 3.19 (R 4.4.1)
 stringi                1.8.4     2024-05-06 [2] CRAN (R 4.4.1)
 stringr                1.5.1     2023-11-14 [2] CRAN (R 4.4.1)
 SummarizedExperiment * 1.34.0    2024-05-01 [1] Bioconductor 3.19 (R 4.4.1)
 svglite                2.1.3     2023-12-08 [1] CRAN (R 4.4.1)
 systemfonts            1.1.0     2024-05-15 [2] CRAN (R 4.4.1)
 tibble                 3.2.1     2023-03-20 [2] CRAN (R 4.4.1)
 tidyr                  1.3.1     2024-01-24 [1] CRAN (R 4.4.1)
 tidyselect             1.2.1     2024-03-11 [1] CRAN (R 4.4.1)
 txdbmaker              1.0.1     2024-06-23 [1] Bioconductor 3.19 (R 4.4.1)
 UCSC.utils             1.0.0     2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 urlchecker             1.0.1     2021-11-30 [2] CRAN (R 4.4.1)
 usethis              * 3.0.0     2024-07-29 [2] CRAN (R 4.4.1)
 utf8                   1.2.4     2023-10-22 [2] CRAN (R 4.4.1)
 VariantAnnotation      1.50.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 vctrs                  0.6.5     2023-12-01 [2] CRAN (R 4.4.1)
 viridisLite            0.4.2     2023-05-02 [1] CRAN (R 4.4.1)
 withr                  3.0.1     2024-07-31 [2] CRAN (R 4.4.1)
 xfun                   0.47      2024-08-17 [1] CRAN (R 4.3.1)
 XML                    3.99-0.17 2024-06-25 [1] CRAN (R 4.4.1)
 xml2                   1.3.6     2023-12-04 [2] CRAN (R 4.4.1)
 xtable                 1.8-4     2019-04-21 [2] CRAN (R 4.4.1)
 XVector              * 0.44.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 yaml                   2.3.10    2024-07-26 [1] CRAN (R 4.3.1)
 zlibbioc               1.50.0    2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)

 [1] /home/jarost/MyRextensions
 [2] /sw/easybuild_milan/software/R/4.4.1-foss-2023a/lib64/R/library

──────────────────────────────────────────────────────────────────────────────
> 
> proc.time()
     user    system   elapsed 
10714.188  4114.595  1724.034 
