
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #' ---
> #' title: "Normalize Library counts"
> #' author: "Tomas Bjorklund"
> #' edited by: "Jaro Steindorff"
> #' output: allSamplesDataTable.RDS -- a table of all the samples with normalized read counts 
> #'          This workflow normalizes read counts between samples to compensate for variable read depth.  
> #' ---
> 
> #  This will make R-functions such as library() and install.packages() use this directory:
> .libPaths(c('~/MyRextensions', .libPaths()))
> 
> # load libraries
> suppressPackageStartupMessages(library(GenomicAlignments))
> suppressPackageStartupMessages(library(Biostrings))
> suppressPackageStartupMessages(library(data.table))
> suppressPackageStartupMessages(library(scales))
> suppressPackageStartupMessages(library(ShortRead))
> suppressPackageStartupMessages(library(parallel))
> suppressPackageStartupMessages(library(future))
> suppressPackageStartupMessages(library(future.apply))
> suppressPackageStartupMessages(library(seqinr))
> suppressPackageStartupMessages(library(plyr))
> suppressPackageStartupMessages(library(Hmisc))
> suppressPackageStartupMessages(library(devtools))
> suppressPackageStartupMessages(library(kableExtra))
> 
> #' Generate load list and grouping names
> #' ============================
> strt <- Sys.time()
> # get a list off all the files in the output folder
> in.names.all <- list.files("2_output", pattern="*.rds", full.names=TRUE)
> # read the load list
> load.list <- read.table("input/loadlist.txt", header = FALSE, skip = 0, sep="\t",
+                         stringsAsFactors = FALSE, fill=TRUE)
> # set the column names
> colnames(load.list) <- c("Name", "BaseName","GroupName")
> # add 3 columns to the load list
> load.list <- rbind(load.list,c("completeLibraryRanges","","DNA_pscAAVlib"))
> # extract all the names that are in the load list
> in.names.all <- in.names.all[unlist(sapply(load.list$Name, grep, in.names.all))]
> # crate a datafram that holds the samples form the in.names.all and their corresponding group name based on the load list
> grouping <- data.frame(Sample=gsub("-","_",gsub("found.|(2_output/)|(.rds)", "", in.names.all)),
+                        Group=load.list[match(gsub("-","_",gsub("found.|(2_output/)|(.rds)", "", in.names.all)),load.list$Name),"GroupName"],
+                        stringsAsFactors = FALSE)
> 
> #' Load the desired alignment files and annotating group
> #' ============================
> 
> # function to load the RDS files
> loadRDS <- function(in.name) {
+   # read the RDS file
+   this.sample <- readRDS(in.name)
+   # get the name of the sample
+   this.name <- gsub("-","_",gsub("found.|(2_output/)|(.rds)", "", in.name))
+   # get the group of the sample
+   this.group <- grouping[match(this.name,grouping$Sample),"Group"]
+   # combine the sample with a data frame of the sample and the group
+   mcols(this.sample) <- cbind(mcols(this.sample),
+                               data.frame(Sample = this.name, Group=this.group,
+                                          stringsAsFactors = FALSE))
+   return(this.sample)
+ }
> 
> # Load all RDS files specified in 'in.names.all' into a list of R objects
> all.samples <- lapply(in.names.all, loadRDS)
> # Combine the list of R objects into a single GAlignmentsList object. Using unlist() to flatten the list of objects before combining
> all.samples <- GAlignmentsList(unlist(all.samples))
> # Take this out for now since it reduces the number of samples down to only the first one
> # all.samples <- cbind(all.samples)[[1]]
> 
> # rename the samples into unique names
> names(all.samples) <- make.names(names(all.samples), unique=TRUE)
> # create a data.table with the seqnames and seq length and set the key to seqnames  
> length.Table <- data.table(seqnames=names(seqlengths(all.samples)), seqlength=seqlengths(all.samples), key="seqnames")
> # create a data.table from all samples and set the key to seqnames    
> all.samples <- data.table(as.data.frame(all.samples), key="seqnames")
> # remove unnecessary columns
> all.samples[,c("strand","qwidth","cigar","njunc","end"):=NULL]
> # A data.table merge to match seqlengths to their respective seqnames
> all.samples <- all.samples[length.Table]
> # create new columns and assign the values based on the seqnames that was splid into its parts
> all.samples[, c("Category", "Protein", "Origin", 
+                 "Extra", "Number","GeneName") := tstrsplit(seqnames, ",", fixed=TRUE)]
> # remove unnecessary columns
> all.samples[, c("seqnames","Protein", "Origin", 
+                 "Extra", "Number") := NULL]
> # cange the GeneName column to hold the actual gene name
> all.samples[, GeneName := gsub("/|_","-",GeneName)]
> 
> 
> #' Normalizing read counts to correct for variable read depth
> #' ============================
> # setting the key to the group
> setkey(all.samples,Group)
> # get rid of single read samples
> all.samples <- all.samples[RNAcount>1,]
> # store the read counts grouped by the group
> readCounts <- all.samples[,list(GroupCount=sum(RNAcount)), by="Group"]
> # normalize the group reads by the max Group reads sow e get values between 0 and 1
> readCounts[,GroupCount:=GroupCount/max(GroupCount)]
> # set the key to Group
> setkey(readCounts,Group)
> # merge the data table with the normalized read counts
> all.samples <- all.samples[readCounts]
> # normalize the read counts by the Group Count to correct for variable read depth
> all.samples[,RNAcount:=RNAcount/GroupCount]
> 
> # extract only the definitive Barcodes which have at least 2 reads per pair of barcode & LUTnr
> all.samples <- all.samples[Mode=="Def"]
> 
> # set the key to the Group
> setkey(all.samples,Group)
> # get all the AAV samples by removing the DNA samples
> total.AAV.samples <- all.samples[Group!="DNA_pscAAVlib" & Group!="DNA_pscAAVlib_Prep2" & Group!="DNA_AAVlib_DNAse_3cpc" & Group!="DNA_AAVlib_DNAse_30cpc"]
> # print the number of AAV samples
> print(nrow(total.AAV.samples))
[1] 58786
> # get the transported 30 cpc AAV samples
> transported.AAV.samples.30cpc <- total.AAV.samples[grepl("mRNA_30cpc_SN|mRNA_30cpc_Th|mRNA_30cpc_Ctx",total.AAV.samples$Group)]
> # print the number of 30 cpc AAV samples
> print(nrow(transported.AAV.samples.30cpc))
[1] 17037
> # get the transported 3 cpc AAV samples
> transported.AAV.samples.3cpc <- total.AAV.samples[grepl("mRNA_3cpc_SN|mRNA_3cpc_Th|mRNA_3cpc_Ctx",total.AAV.samples$Group)]
> # print the number of 3 cpc AAV samples
> print(nrow(transported.AAV.samples.3cpc))
[1] 2501
> # set the group name to mRNA_30cpc_Trsp
> transported.AAV.samples.30cpc[,Group := "mRNA_30cpc_Trsp"]
> # set the group name to mRNA_3cpc_Trsp
> transported.AAV.samples.3cpc[,Group := "mRNA_3cpc_Trsp"]
> # set the group name to mRNA_All
> total.AAV.samples[,Group := "mRNA_All"]
> 
> # recombine all samples with their new group names
> all.samples <- rbind(all.samples,total.AAV.samples,transported.AAV.samples.30cpc,transported.AAV.samples.3cpc)
> 
> # remove the data.tables that were create before
> rm(total.AAV.samples,transported.AAV.samples.30cpc,transported.AAV.samples.3cpc)
> 
> # set the key of all samples to a vector of the columns
> setkeyv(all.samples,c("Group","Category","GeneName","structure","start","width","Sequence","seqlength"))
> 
> # adjust the all samples data table
> all.samples <- all.samples[,j=list(bitScore=sum(bitScore*tCount)/sum(tCount),
+                                    mismatches=median(mismatches),
+                                    mCount=sum(mCount),
+                                    tCount=sum(tCount),
+                                    BC=paste(unique(BC), collapse = ","),
+                                    Animals=paste(unique(Sample), collapse = ","),
+                                    LUTnrs=paste(unique(LUTnr), collapse = ","),
+                                    RNAcount=sum(RNAcount),
+                                    NormCount=log2(sum(RNAcount)+1)*.N),
+                            by=c("Group","Category","GeneName","structure","start","width","Sequence","seqlength")]
> 
> # adjust the start,width and seqlength from DNA based to AA based
> all.samples[,start:=floor((start+2)/3)]
> all.samples[,width:=ceiling((width)/3)]
> all.samples[,seqlength:=ceiling(seqlength/3)]
> # calculate the absolute AA position of the middle of the fragment 
> all.samples[,AA:=floor(start+(width/2))]
> # calculate the relative AA position of the middle of the fragment in the whole sequence
> all.samples[,AAproc:=AA/seqlength*100]
> 
> #' Remove overhangs on the sequence based on the Structure annotation
> #' ============================
> # remove the overhangs based on the structure
> all.samples[structure == "14aa", "Sequence" := substr(Sequence,3,44)]
> all.samples[structure == "22aa", "Sequence" := substr(Sequence,3,68)]
> all.samples[structure == "14aaG4S", "Sequence" := substr(Sequence,15,56)]
> all.samples[structure == "14aaA5", "Sequence" := substr(Sequence,15,56)]
> 
> #Change the default behavior to induce start codons and Methionine
> GENETIC_CODE_ALT <- GENETIC_CODE
> attr(GENETIC_CODE_ALT, "alt_init_codons") <- c("TAA","TAG")
> 
> # Define the translation function
> translate_function <- function(sequence) {
+   as.character(Biostrings::translate(DNAString(sequence), genetic.code = GENETIC_CODE_ALT, if.fuzzy.codon = "solve"))
+ }
> 
> # Set up parallel processing
> plan(multisession, workers = detectCores())  # Adjust number of workers based on your CPU
> 
> # Apply translation function in parallel
> all.samples[, Peptide := future_lapply(Sequence, translate_function)]
> 
> # Optionally, reset the parallel plan
> plan(sequential)
> 
> # print the number of samples in the all samples data table
> print(nrow(all.samples))
[1] 491870
> 
> # save the whole data table as all Samples DATA table
> saveRDS(all.samples, file="0_data/allSamplesDataTable.RDS")
> 
> print("Total execution time:")
[1] "Total execution time:"
> print(Sys.time()-strt)
Time difference of 17.26608 mins
> devtools::session_info()
─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.4.1 (2024-06-14)
 os       Rocky Linux 9.4 (Blue Onyx)
 system   x86_64, linux-gnu
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Europe/Stockholm
 date     2024-09-17
 pandoc   NA (via rmarkdown)

─ Packages ───────────────────────────────────────────────────────────────────
 package              * version date (UTC) lib source
 abind                  1.4-5   2016-07-21 [1] CRAN (R 4.4.1)
 ade4                   1.7-22  2023-02-06 [1] CRAN (R 4.4.1)
 backports              1.5.0   2024-05-23 [1] CRAN (R 4.4.1)
 base64enc              0.1-3   2015-07-28 [2] CRAN (R 4.4.1)
 Biobase              * 2.64.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 BiocGenerics         * 0.50.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 BiocParallel         * 1.38.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 Biostrings           * 2.72.1  2024-06-02 [1] Bioconductor 3.19 (R 4.4.1)
 bitops                 1.0-8   2024-07-29 [1] CRAN (R 4.4.1)
 cachem                 1.1.0   2024-05-16 [2] CRAN (R 4.4.1)
 checkmate              2.3.2   2024-07-29 [1] CRAN (R 4.4.1)
 cli                    3.6.3   2024-06-21 [2] CRAN (R 4.4.1)
 cluster                2.1.6   2023-12-01 [1] CRAN (R 4.4.1)
 codetools              0.2-20  2024-03-31 [1] CRAN (R 4.4.1)
 colorspace             2.1-1   2024-07-26 [1] CRAN (R 4.4.1)
 crayon                 1.5.3   2024-06-20 [2] CRAN (R 4.4.1)
 data.table           * 1.16.0  2024-08-27 [1] CRAN (R 4.4.1)
 DelayedArray           0.30.1  2024-05-07 [1] Bioconductor 3.19 (R 4.4.1)
 deldir                 2.0-4   2024-02-28 [1] CRAN (R 4.4.1)
 devtools             * 2.4.5   2022-10-11 [1] CRAN (R 4.4.1)
 digest                 0.6.37  2024-08-19 [2] CRAN (R 4.4.1)
 dplyr                  1.1.4   2023-11-17 [1] CRAN (R 4.4.1)
 ellipsis               0.3.2   2021-04-29 [2] CRAN (R 4.4.1)
 evaluate               0.24.0  2024-06-10 [1] CRAN (R 4.3.1)
 fansi                  1.0.6   2023-12-08 [2] CRAN (R 4.4.1)
 fastmap                1.2.0   2024-05-15 [2] CRAN (R 4.4.1)
 foreign                0.8-87  2024-06-26 [1] CRAN (R 4.4.1)
 Formula                1.2-5   2023-02-24 [1] CRAN (R 4.4.1)
 fs                     1.6.4   2024-04-25 [2] CRAN (R 4.4.1)
 future               * 1.34.0  2024-07-29 [1] CRAN (R 4.4.1)
 future.apply         * 1.11.2  2024-03-28 [1] CRAN (R 4.4.1)
 generics               0.1.3   2022-07-05 [1] CRAN (R 4.4.1)
 GenomeInfoDb         * 1.40.1  2024-05-24 [1] Bioconductor 3.19 (R 4.4.1)
 GenomeInfoDbData       1.2.12  2024-09-05 [1] Bioconductor
 GenomicAlignments    * 1.40.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 GenomicRanges        * 1.56.1  2024-06-12 [1] Bioconductor 3.19 (R 4.4.1)
 ggplot2                3.5.1   2024-04-23 [1] CRAN (R 4.4.1)
 globals                0.16.3  2024-03-08 [1] CRAN (R 4.4.1)
 glue                   1.7.0   2024-01-09 [2] CRAN (R 4.4.1)
 gridExtra              2.3     2017-09-09 [1] CRAN (R 4.4.1)
 gtable                 0.3.5   2024-04-22 [1] CRAN (R 4.4.1)
 Hmisc                * 5.1-3   2024-05-28 [1] CRAN (R 4.4.1)
 htmlTable              2.4.3   2024-07-21 [1] CRAN (R 4.4.1)
 htmltools              0.5.8.1 2024-04-04 [2] CRAN (R 4.4.1)
 htmlwidgets            1.6.4   2023-12-06 [2] CRAN (R 4.4.1)
 httpuv                 1.6.15  2024-03-26 [2] CRAN (R 4.4.1)
 httr                   1.4.7   2023-08-15 [1] CRAN (R 4.3.1)
 hwriter                1.3.2.1 2022-04-08 [1] CRAN (R 4.4.1)
 interp                 1.1-6   2024-01-26 [1] CRAN (R 4.4.1)
 IRanges              * 2.38.1  2024-07-03 [1] Bioconductor 3.19 (R 4.4.1)
 jpeg                   0.1-10  2022-11-29 [1] CRAN (R 4.4.1)
 jsonlite               1.8.8   2023-12-04 [1] CRAN (R 4.3.1)
 kableExtra           * 1.4.0   2024-01-24 [1] CRAN (R 4.4.1)
 knitr                  1.48    2024-07-07 [1] CRAN (R 4.3.1)
 later                  1.3.2   2023-12-06 [2] CRAN (R 4.4.1)
 lattice                0.22-6  2024-03-20 [1] CRAN (R 4.4.1)
 latticeExtra           0.6-30  2022-07-04 [1] CRAN (R 4.4.1)
 lifecycle              1.0.4   2023-11-07 [2] CRAN (R 4.4.1)
 listenv                0.9.1   2024-01-29 [1] CRAN (R 4.4.1)
 magrittr               2.0.3   2022-03-30 [2] CRAN (R 4.4.1)
 MASS                   7.3-61  2024-06-13 [1] CRAN (R 4.4.1)
 Matrix                 1.7-0   2024-04-26 [1] CRAN (R 4.4.1)
 MatrixGenerics       * 1.16.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 matrixStats          * 1.4.1   2024-09-08 [1] CRAN (R 4.4.1)
 memoise                2.0.1   2021-11-26 [2] CRAN (R 4.4.1)
 mime                   0.12    2021-09-28 [1] CRAN (R 4.3.1)
 miniUI                 0.1.1.1 2018-05-18 [2] CRAN (R 4.4.1)
 munsell                0.5.1   2024-04-01 [1] CRAN (R 4.4.1)
 nnet                   7.3-19  2023-05-03 [1] CRAN (R 4.4.1)
 parallelly             1.38.0  2024-07-27 [1] CRAN (R 4.4.1)
 pillar                 1.9.0   2023-03-22 [2] CRAN (R 4.4.1)
 pkgbuild               1.4.4   2024-03-17 [2] CRAN (R 4.4.1)
 pkgconfig              2.0.3   2019-09-22 [2] CRAN (R 4.4.1)
 pkgload                1.4.0   2024-06-28 [2] CRAN (R 4.4.1)
 plyr                 * 1.8.9   2023-10-02 [1] CRAN (R 4.4.1)
 png                    0.1-8   2022-11-29 [1] CRAN (R 4.4.1)
 profvis                0.3.8   2023-05-02 [2] CRAN (R 4.4.1)
 promises               1.3.0   2024-04-05 [2] CRAN (R 4.4.1)
 purrr                  1.0.2   2023-08-10 [2] CRAN (R 4.4.1)
 pwalign                1.0.0   2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 R6                     2.5.1   2021-08-19 [1] CRAN (R 4.3.1)
 RColorBrewer           1.1-3   2022-04-03 [1] CRAN (R 4.4.1)
 Rcpp                   1.0.13  2024-07-17 [2] CRAN (R 4.4.1)
 remotes                2.5.0   2024-03-17 [2] CRAN (R 4.4.1)
 rlang                  1.1.4   2024-06-04 [2] CRAN (R 4.4.1)
 rmarkdown              2.28    2024-08-17 [2] CRAN (R 4.4.1)
 rpart                  4.1.23  2023-12-05 [1] CRAN (R 4.4.1)
 Rsamtools            * 2.20.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 rstudioapi             0.16.0  2024-03-24 [2] CRAN (R 4.4.1)
 S4Arrays               1.4.1   2024-05-20 [1] Bioconductor 3.19 (R 4.4.1)
 S4Vectors            * 0.42.1  2024-07-03 [1] Bioconductor 3.19 (R 4.4.1)
 scales               * 1.3.0   2023-11-28 [1] CRAN (R 4.4.1)
 seqinr               * 4.2-36  2023-12-08 [1] CRAN (R 4.4.1)
 sessioninfo            1.2.2   2021-12-06 [2] CRAN (R 4.4.1)
 shiny                  1.9.1   2024-08-01 [2] CRAN (R 4.4.1)
 ShortRead            * 1.62.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 SparseArray            1.4.8   2024-05-24 [1] Bioconductor 3.19 (R 4.4.1)
 stringi                1.8.4   2024-05-06 [2] CRAN (R 4.4.1)
 stringr                1.5.1   2023-11-14 [2] CRAN (R 4.4.1)
 SummarizedExperiment * 1.34.0  2024-05-01 [1] Bioconductor 3.19 (R 4.4.1)
 svglite                2.1.3   2023-12-08 [1] CRAN (R 4.4.1)
 systemfonts            1.1.0   2024-05-15 [2] CRAN (R 4.4.1)
 tibble                 3.2.1   2023-03-20 [2] CRAN (R 4.4.1)
 tidyselect             1.2.1   2024-03-11 [1] CRAN (R 4.4.1)
 UCSC.utils             1.0.0   2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 urlchecker             1.0.1   2021-11-30 [2] CRAN (R 4.4.1)
 usethis              * 3.0.0   2024-07-29 [2] CRAN (R 4.4.1)
 utf8                   1.2.4   2023-10-22 [2] CRAN (R 4.4.1)
 vctrs                  0.6.5   2023-12-01 [2] CRAN (R 4.4.1)
 viridisLite            0.4.2   2023-05-02 [1] CRAN (R 4.4.1)
 xfun                   0.47    2024-08-17 [1] CRAN (R 4.3.1)
 xml2                   1.3.6   2023-12-04 [2] CRAN (R 4.4.1)
 xtable                 1.8-4   2019-04-21 [2] CRAN (R 4.4.1)
 XVector              * 0.44.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)
 zlibbioc               1.50.0  2024-04-30 [1] Bioconductor 3.19 (R 4.4.1)

 [1] /home/jarost/MyRextensions
 [2] /sw/easybuild_milan/software/R/4.4.1-foss-2023a/lib64/R/library

──────────────────────────────────────────────────────────────────────────────
> 
> 
> proc.time()
    user   system  elapsed 
 304.456   11.391 1046.555 
